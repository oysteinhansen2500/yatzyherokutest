{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\xD8ystein\\\\testspill\\\\my-app\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: 'cancer',\n      post: '',\n      responseToPost: ''\n    };\n    this.output = [];\n\n    this.callApi = async () => {\n      const response = await fetch('/ping');\n      console.log(response);\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      console.log(body);\n      return body;\n    };\n\n    this.logState = async () => {\n      console.log(\"state:\", this.state.response);\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => {\n      console.log(\"res:\", typeof res);\n      var output = res;\n      let usernames = [];\n      res.map(user => {\n        usernames.push(user.username);\n      });\n      console.log(usernames);\n      this.setState({\n        response: res\n      });\n      this.output = res;\n      console.log(\"output:\", this.output);\n      console.log(\"state\", this.state.response, typeof this.state.response);\n    }).catch(err => console.log(err));\n    console.log(this.state.response);\n    console.log(this.output);\n    this.logState();\n  }\n\n  render() {\n    {\n      console.log(\"aRe YoU suRe It'S tHaT oNE\", this.state.response);\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }, \"Hello\", console.log(\"output\", this.state.response), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    }, this.state.response.map(username => {\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        key: username.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 28\n        }\n      }, username.username);\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      key: this.state.response[1].username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 26\n      }\n    }, this.state.response[1].username)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ã˜ystein/testspill/my-app/client/src/App.js"],"names":["React","Component","ReactDOM","App","state","response","post","responseToPost","output","callApi","fetch","console","log","body","json","status","Error","message","logState","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","componentDidMount","then","res","usernames","map","user","push","username","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,QADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADkB;AAAA,SAQ5BC,MAR4B,GAQnB,EARmB;;AAAA,SAqB1BC,OArB0B,GAqBhB,YAAY;AAClB,YAAMJ,QAAQ,GAAG,MAAMK,KAAK,CAAC,OAAD,CAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,YAAMQ,IAAI,GAAI,MAAMR,QAAQ,CAACS,IAAT,EAApB;AACA,UAAIT,QAAQ,CAACU,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7BN,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,aAAOA,IAAP;AACD,KA7BuB;;AAAA,SA+BxBK,QA/BwB,GA+Bb,YAAY;AACrBP,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKR,KAAL,CAAWC,QAAjC;AACD,KAjCuB;;AAAA,SAmCxBc,YAnCwB,GAmCT,MAAMC,CAAN,IAAW;AAC5BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMhB,QAAQ,GAAG,MAAMK,KAAK,CAAC,YAAD,EAAe;AACzCY,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCV,QAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAe;AAAEnB,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMO,IAAI,GAAG,MAAMR,QAAQ,CAACqB,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AAAEpB,QAAAA,cAAc,EAAEM;AAAlB,OAAd;AACD,KA/C2B;AAAA;;AAU1Be,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,OAAL,GACGoB,IADH,CACQC,GAAG,IAAI;AAACnB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,OAAOkB,GAA3B;AAAkC,UAAItB,MAAM,GAACsB,GAAX;AAAgB,UAAIC,SAAS,GAAC,EAAd;AAAkBD,MAAAA,GAAG,CAACE,GAAJ,CAAQC,IAAI,IAAG;AAACF,QAAAA,SAAS,CAACG,IAAV,CAAeD,IAAI,CAACE,QAApB;AAA8B,OAA9C;AAAiDxB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,SAAZ;AAAwB,WAAKJ,QAAL,CAAc;AAAEtB,QAAAA,QAAQ,EAAEyB;AAAZ,OAAd;AAAiC,WAAKtB,MAAL,GAAYsB,GAAZ;AAAiBnB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKJ,MAA5B;AAAqCG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKR,KAAL,CAAWC,QAAhC,EAA0C,OAAO,KAAKD,KAAL,CAAWC,QAA5D;AAAuE,KAD3T,EAEG+B,KAFH,CAESC,GAAG,IAAI1B,OAAO,CAACC,GAAR,CAAYyB,GAAZ,CAFhB;AAGE1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,QAAvB;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,MAAjB;AAEA,SAAKU,QAAL;AACH;;AA8BDoB,EAAAA,MAAM,GAAG;AACP;AAAC3B,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKR,KAAL,CAAWC,QAArD;AAA+D;AAEjD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEGM,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKR,KAAL,CAAWC,QAAjC,CAFH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,QAAX,CAAoB2B,GAApB,CAAwBG,QAAQ,IAAI;AACnC;AAAA;AAAI,QAAA,GAAG,EAAEA,QAAQ,CAACA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BA,QAAQ,CAACA,QAAtC;AACD,KAFA,CADH,eAIE;AAAI,MAAA,GAAG,EAAE,KAAK/B,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB8B,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAK/B,KAAL,CAAWC,QAAX,CAAoB,CAApB,EAAuB8B,QAAlE,CAJF,CAHF,CADF;AAgBlB;;AApE2B;;AAuE5B,eAAehC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\nclass App extends Component {\n  state = {\n    response: 'cancer',\n    post: '',\n    responseToPost: '',\n  };\n\n\noutput = [];\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => {console.log(\"res:\", typeof(res)); var output=res; let usernames=[]; res.map(user =>{usernames.push(user.username)}); console.log(usernames); this.setState({ response: res}); this.output=res; console.log(\"output:\", this.output); console.log(\"state\", this.state.response, typeof(this.state.response))})\n      .catch(err => console.log(err));\n      console.log(this.state.response);\n\n      console.log(this.output);\n\n      this.logState();\n  }\n\n  callApi = async () => {\n      const response = await fetch('/ping');\n      console.log(response);\n      const body =  await response.json();\n      if (response.status !== 200) throw Error(body.message);\n\n      console.log(body);\n      return body;\n    };\n\n    logState = async () => {\n      console.log(\"state:\", this.state.response);\n    }\n\n    handleSubmit = async e => {\n  e.preventDefault();\n  const response = await fetch('/api/world', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ post: this.state.post }),\n  });\n  const body = await response.text();\n\n  this.setState({ responseToPost: body });\n};\n\n  render() {\n    {console.log(\"aRe YoU suRe It'S tHaT oNE\", this.state.response)}\n\n                   return (\n                     <div>\n                       Hello\n                       {console.log(\"output\", this.state.response)}\n                       <ul>\n                         {this.state.response.map(username => {\n                           <li key={username.username}>{username.username}</li>\n                         })}\n                         <li key={this.state.response[1].username}>{this.state.response[1].username}</li>\n\n                     </ul>\n                     </div>\n                   );\n\n\n\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}